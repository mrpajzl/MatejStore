// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rbPHTCCgxa1NtQh9SvuYvu
// Component: DgTFbRqNOZbea
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: pxvQuH8cjTN_Y/component
import { ProductCollection } from "@plasmicpkgs/commerce"; // plasmic-import: vU2jzVAnFP/codeComponent
import ProductCard from "../../ProductCard"; // plasmic-import: MXvMmBE7ryTu3/component
import { ProductMedia } from "@plasmicpkgs/commerce"; // plasmic-import: qpULM0wwWW/codeComponent
import BlogPost from "../../BlogPost"; // plasmic-import: vuLgzHtUGA83Yi/component
import Footer from "../../Footer"; // plasmic-import: ztWaYrrZWHF_l/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_furn_e_commerce.module.css"; // plasmic-import: rbPHTCCgxa1NtQh9SvuYvu/projectcss
import sty from "./PlasmicHome.module.css"; // plasmic-import: DgTFbRqNOZbea/css
import b1QC3ZjUjFwUs9Ar from "./images/b1.jpeg"; // plasmic-import: qC3ZJUjFwUS9AR/picture
import b2V9CdRb4TjB60Wj from "./images/b2.jpeg"; // plasmic-import: v9cdRb4tjB60wj/picture
import b3I87Xb7I8QPmVLc from "./images/b3.jpeg"; // plasmic-import: i87xb7i8QPmVLc/picture
import adidas5Pj7Bt4CtqyyUq from "./images/adidas.png"; // plasmic-import: 5pj7bt4ctqyyUq/picture
import hm2Typy5Hr0HAzyt from "./images/hm.png"; // plasmic-import: 2TYPY5hr0HAzyt/picture
import kappaAlGatDjqzzJoIo from "./images/kappa.png"; // plasmic-import: alGatDJQZZJoIO/picture
import lacosteZaeXyflE3DeDc from "./images/lacoste.png"; // plasmic-import: zae_XyflE3DEDc/picture
import levis9Dq3I8XL54Q5U7 from "./images/levis.png"; // plasmic-import: 9DQ3i8xL54Q5u7/picture

export const PlasmicHome__VariantProps = new Array();

export const PlasmicHome__ArgProps = new Array();

function PlasmicHome__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__qe22)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tw3N)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__flMsR)}>
                <Header
                  data-plasmic-name={"header"}
                  data-plasmic-override={overrides.header}
                />
              </div>
            </p.Stack>

            <div className={classNames(projectcss.all, sty.freeBox__nv6Cm)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xXe3P
                )}
              >
                {"New Arrivals"}
              </div>
            </div>

            <ProductCollection
              className={classNames(
                "__wab_instance",
                sty.productCollection__u2EKf
              )}
              count={8}
              emptyMessage={
                <ph.DataCtxReader>
                  {$ctx => (
                    <>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mq77J
                        )}
                      >
                        {"No product found!"}
                      </div>
                    </>
                  )}
                </ph.DataCtxReader>
              }
              loadingMessage={
                <ph.DataCtxReader>
                  {$ctx => (
                    <>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jzM9M
                        )}
                      >
                        {"Loading..."}
                      </div>
                    </>
                  )}
                </ph.DataCtxReader>
              }
              search={""}
              sort={"latest-desc"}
            >
              <ph.DataCtxReader>
                {$ctx => (
                  <>
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__dSip
                      )}
                      image={
                        <ProductMedia
                          className={classNames(
                            "__wab_instance",
                            sty.productMedia__vfsiy
                          )}
                        />
                      }
                    />
                  </>
                )}
              </ph.DataCtxReader>
            </ProductCollection>

            <div className={classNames(projectcss.all, sty.freeBox__mLnp)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__uaqL
                )}
              >
                {"Featured Products"}
              </div>
            </div>

            <ProductCollection
              category={"626a86bfda5c2c00128ebdda"}
              className={classNames(
                "__wab_instance",
                sty.productCollection___54D8V
              )}
              emptyMessage={
                <ph.DataCtxReader>
                  {$ctx => (
                    <>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__akKaj
                        )}
                      >
                        {"No product found!"}
                      </div>
                    </>
                  )}
                </ph.DataCtxReader>
              }
              loadingMessage={
                <ph.DataCtxReader>
                  {$ctx => (
                    <>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zzM4
                        )}
                      >
                        {"Loading..."}
                      </div>
                    </>
                  )}
                </ph.DataCtxReader>
              }
            >
              <ph.DataCtxReader>
                {$ctx => (
                  <>
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__jnvGf
                      )}
                      image={
                        <ProductMedia
                          className={classNames(
                            "__wab_instance",
                            sty.productMedia__xwyVg
                          )}
                        />
                      }
                    />
                  </>
                )}
              </ph.DataCtxReader>
            </ProductCollection>

            <div className={classNames(projectcss.all, sty.freeBox___2Xsi3)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__htl6S
                )}
              >
                {"Latest Blog"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column___9UyW)}>
                <BlogPost
                  className={classNames("__wab_instance", sty.blogPost__eYha6)}
                  image={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__qzUps)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: b1QC3ZjUjFwUs9Ar,
                        fullWidth: 370,
                        fullHeight: 250,
                        aspectRatio: undefined
                      }}
                    />
                  }
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__rFHdF)}>
                <BlogPost
                  className={classNames("__wab_instance", sty.blogPost__ymApb)}
                  image={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__hBon)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: b2V9CdRb4TjB60Wj,
                        fullWidth: 370,
                        fullHeight: 250,
                        aspectRatio: undefined
                      }}
                    />
                  }
                />
              </div>

              <div className={classNames(projectcss.all, sty.column___69Ejo)}>
                <BlogPost
                  className={classNames("__wab_instance", sty.blogPost__pgeD)}
                  image={
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___3WtY)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: b3I87Xb7I8QPmVLc,
                        fullWidth: 370,
                        fullHeight: 250,
                        aspectRatio: undefined
                      }}
                    />
                  }
                />
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__oEMaF)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__brlSj)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"90px"}
                src={{
                  src: adidas5Pj7Bt4CtqyyUq,
                  fullWidth: 90,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__sgWuW)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"91px"}
                src={{
                  src: hm2Typy5Hr0HAzyt,
                  fullWidth: 91,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__dq1Q9)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"98px"}
                src={{
                  src: kappaAlGatDjqzzJoIo,
                  fullWidth: 98,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__cmdVv)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"124px"}
                src={{
                  src: lacosteZaeXyflE3DeDc,
                  fullWidth: 124,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__gbwVo)}
                displayHeight={"60px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"125px"}
                src={{
                  src: levis9Dq3I8XL54Q5U7,
                  fullWidth: 125,
                  fullHeight: 60,
                  aspectRatio: undefined
                }}
              />
            </p.Stack>

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "header", "columns", "footer"],
  header: ["header"],
  columns: ["columns"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHome__ArgProps,
          internalVariantPropNames: PlasmicHome__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    columns: makeNodeComponent("columns"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
