// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rbPHTCCgxa1NtQh9SvuYvu
// Component: ztWaYrrZWHF_l
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import IconLink from "../../IconLink"; // plasmic-import: u1zH5QXSmcg4i/component
import { useScreenVariants as useScreenVariants_1MD7ZHfJhi7DYn } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 1mD7zHfJHI7dYN/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_furn_e_commerce.module.css"; // plasmic-import: rbPHTCCgxa1NtQh9SvuYvu/projectcss
import sty from "./PlasmicFooter.module.css"; // plasmic-import: ztWaYrrZWHF_l/css
import LocationArrowIcon from "./icons/PlasmicIcon__LocationArrow"; // plasmic-import: dtEA0BzlAwwn0x/icon
import FacebookIcon from "./icons/PlasmicIcon__Facebook"; // plasmic-import: d5DI-seNA5mX2y/icon
import InstagramIcon from "./icons/PlasmicIcon__Instagram"; // plasmic-import: mQ96PunwWkDunw/icon
import LinkedinIcon from "./icons/PlasmicIcon__Linkedin"; // plasmic-import: 4LyPVN850ATXpd/icon

export const PlasmicFooter__VariantProps = new Array();

export const PlasmicFooter__ArgProps = new Array();

function PlasmicFooter__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_1MD7ZHfJhi7DYn()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_library_plasmic_color_type_css.plasmic_tokens,
        sty.root
      )}
    >
      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__bAa6C)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__alovx)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__gsi5Q
            )}
          >
            {"Information"}
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__vuWP)}
          >
            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link___7J9K
              )}
              href={"#"}
            >
              {"About Us"}
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__gyWvr
              )}
              href={"#"}
            >
              {"Contact Us"}
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__t3JxK
              )}
              href={"#"}
            >
              {"News"}
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__c3Ur8
              )}
              href={"#"}
            >
              {"Store"}
            </a>
          </p.Stack>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__hCoVa)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__hoNtx
            )}
          >
            {"Collections"}
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__w8Dy)}
          >
            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__shNp
              )}
              href={"#"}
            >
              {"Wooden Chair"}
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__ypHwg
              )}
              href={"#"}
            >
              {"Royal Cloth Sofa"}
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__kM55
              )}
              href={"#"}
            >
              {"Accent Chair"}
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__jevth
              )}
              href={"#"}
            >
              {"Bed"}
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__yc0Hc
              )}
              href={"#"}
            >
              {"Hanging Lamp"}
            </a>
          </p.Stack>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__qE3VH)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__deUqh
            )}
          >
            {"My Accounts"}
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__c80Ky)}
          >
            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__gv4De
              )}
              href={"#"}
            >
              {"My Account"}
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__wDur7
              )}
              href={"#"}
            >
              {"Wishlist"}
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__oCzO2
              )}
              href={"#"}
            >
              {"Community"}
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__saaOe
              )}
              href={"#"}
            >
              {"Order History"}
            </a>

            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__xBuZq
              )}
              href={"#"}
            >
              {"My Cart"}
            </a>
          </p.Stack>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__pcOrB)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___9IJbR
            )}
          >
            {"Newsletter"}
          </div>

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__wc0O
            )}
          >
            {"Subscribe to get latest news, updates, and information"}
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___1M8Ca)}>
            <input
              data-plasmic-name={"textInput"}
              data-plasmic-override={overrides.textInput ?? overrides.textbox}
              className={classNames(
                projectcss.all,
                projectcss.input,
                sty.textInput
              )}
              placeholder={"Enter Email Here..."}
              size={1}
              type={"text"}
              value={""}
            />

            <button
              data-plasmic-name={"button"}
              data-plasmic-override={overrides.button}
              className={classNames(
                projectcss.all,
                projectcss.button,
                sty.button
              )}
            >
              <LocationArrowIcon
                className={classNames(projectcss.all, sty.svg__wLtTn)}
                role={"img"}
              />
            </button>
          </div>
        </p.Stack>
      </p.Stack>

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox___1D3Wa)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__lDs6X)}
        >
          <IconLink
            className={classNames("__wab_instance", sty.iconLink__joTm)}
            icon={
              <FacebookIcon
                className={classNames(projectcss.all, sty.svg__uG5F5)}
                role={"img"}
              />
            }
          />

          <IconLink
            className={classNames("__wab_instance", sty.iconLink__sXKh5)}
            icon={
              <InstagramIcon
                className={classNames(projectcss.all, sty.svg__oqcl)}
                role={"img"}
              />
            }
          />

          <IconLink
            className={classNames("__wab_instance", sty.iconLink__tqFx2)}
            icon={
              <LinkedinIcon
                className={classNames(projectcss.all, sty.svg__s8N8H)}
                role={"img"}
              />
            }
          />
        </p.Stack>

        <div className={classNames(projectcss.all, sty.freeBox__abJon)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__nDgt9
            )}
          >
            {"© Copyright. "}
          </div>

          <a
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__bhdi
            )}
            href={"https://www.plasmic.app/"}
          >
            {"Made by Plasmic. "}
          </a>

          <a
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__elaZw
            )}
            href={"https://www.themesine.com/"}
          >
            {"Inspired by Themesine."}
          </a>
        </div>
      </p.Stack>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "textInput", "textbox", "button"],
  textInput: ["textInput", "textbox"],
  button: ["button"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicFooter__ArgProps,
          internalVariantPropNames: PlasmicFooter__VariantProps
        }),

      [props, nodeName]
    );

    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    textInput: makeNodeComponent("textInput"),
    button: makeNodeComponent("button"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
